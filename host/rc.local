#!/bin/bash
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

set -euo pipefail

set -x

start_iperf3 () {
    [ "$(pgrep iperf3)" ] && { echo "INFO: killing iperf3"; pkill -9 iperf3; }

    start-stop-daemon -b -x /usr/bin/iperf3 -S -- -s
}

setup_iptables () {
    # If more than $dropConnCount connection attempts are made in
    # $dropConnInterval seconds, drop them.
    declare -i dropConnCount=3
    declare -i dropConnInterval=240

    echo "INFO: iptables delete chain LOGDROP"
    iptables --zero INPUT
    iptables --flush INPUT
    iptables --zero LOGDROP
    iptables --flush LOGDROP
    sleep 1
    iptables --delete-chain LOGDROP || { echo "WARN: delete chain LOGDROP failed"; }

    echo "INFO: iptables new chain LOGDROP"
    iptables -N LOGDROP

    echo "INFO: iptables append LOGDROP: jump LOG"
    iptables -A LOGDROP -j LOG

    echo "INFO: iptables append LOGDROP: jump DROP"
    iptables -A LOGDROP -j DROP

    echo "INFO: iptables insert INPUT (match recent)"
    iptables -I INPUT -p tcp --dport 22222 -i eth0 -m state --state NEW -m recent --set

    echo "INFO: iptables insert INPUT (match recent): jump LOGDROP"
    iptables -I INPUT -p tcp --dport 22222 -i eth0 -m state --state NEW -m recent --update --seconds $dropConnInterval --hitcount $dropConnCount -j LOGDROP
}

start_containers () {
    echo "INFO: --HACK-- start the wview container here"
    /home/pi/weather-station/containers/run.sh
}

echo "INFO: setup iptables"
setup_iptables
echo "INFO: setup iperf3"
start_iperf3
echo "INFO: start containers"
start_containers

exit 0
