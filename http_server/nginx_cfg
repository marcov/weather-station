##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

    #
    # Redirect from old to new domain name
    #
	if ($http_host = 'fiobbio.blogdns.net') {
		rewrite ^(.*) http://meteo.fiobbio.com$1 redirect;
	}

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    server_name _;

    # = : exact match
    location  = / {
        root /home/pi/weather_station/wview/html/fiobbio/;
        try_files $uri $uri/ =404;

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    # ~ : regex
    location ~ ^/(index\.|js/|css/|html/) {
        root /home/pi/weather_station/wview/html/fiobbio/;
        try_files $uri $uri/ =404;

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }
   
    # TODO : enable php...
    #location /wviewmgmt/ {
    #    alias /var/lib/wviewmgmt/;
    #    try_files $uri $uri/ =404;
    #}


	#CGI for perl
	location /cgi-bin/ {
		root /home/pi/wview-rrd/;
		try_files $uri =404;
		gzip off;
		fastcgi_pass  127.0.0.1:8999;
		fastcgi_index index.pl;
		fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		include fastcgi_params;
	}  

    # fallback
    location / {
        
        # Temporary for test... 
        #proxy_pass http://192.168.1.200/weather/;

        root /var/lib/wview/img;
        #  # First attempt to serve request as file, then
        #  # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;

        #  # Redirect old /weather path
        rewrite ^/weather/(.+)$  /$1 last;
        rewrite ^/weather/?$ / permanent;

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }
    

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}
    
   # Reverse proxy for misma website 
   location /misma/ {
       proxy_pass http://192.168.1.150:8080/;
   }

   location ~ ^/ap/(.*)$ {
       proxy_pass http://192.168.1.254/$1;
   }

}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
