##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

#
# !!!!!!!!!!!!!!!!!!!!!!!!  WARNING WARNING WARNING !!!!!!!!!!!!!!!!!!!!!!!!
#
# Nice job! You are here trying to add a new location to your nginx server,
# seems easy to just copy an existing location and change it, right?
#
# NNNNOOOOOOO!
#
# TLDR
#   if you have:
#
#   location /foo {
#     root /bar;
#   }
#
#   nginx expect to find files to serve in: /foo/bar
#
#   Most of the time, what you want instead, is "when the path is /foo, serve
#   files in /bar.
#
#   !!!!! This is obtained using 'alias', and not 'root' !!!!
#
#   location /foo {
#     alias /bar;
#   }
#
# !!!!!!!!!!!!!!!!!!!!!!!!  WARNING WARNING WARNING !!!!!!!!!!!!!!!!!!!!!!!!
#
# And now you have nginx running in a container, with a mount bind of this file
# on the host, and expect to just change this file with Vim and  reload nginx with
# `nginx -s reaload' to pick up the changes.
#
# THIS DOES NOT WORK, because every time you save this file, the inode number
# changes, breaking the mount bind.
#
# A workaround is to `:set backupcopy=yes' in Vim
#
# !!!!!!!!!!!!!!!!!!!!!!!!  WARNING WARNING WARNING !!!!!!!!!!!!!!!!!!!!!!!!
#

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name meteo.fiobbio.com;

# vvvvv HEY! Comment out these lines to disable SSL -- START
    return 301 https://$host$request_uri;
}

server {
# ^^^^^ HEY! Comment out these lines to disable SSL -- END

    listen 443 ssl;

    #
    # Redirect from old to new domain name
    #
    if ($http_host = 'fiobbio.blogdns.net') {
        #rewrite ^(.*) http://meteo.fiobbio.com$1 redirect;
        rewrite ^(.*) http://meteo.fiobbio.com/bad-domain.html permanent;
    }

    index index.html index.htm;

    server_name meteo.fiobbio.com;

    ssl_certificate /etc/letsencrypt/live/meteo.fiobbio.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/meteo.fiobbio.com/privkey.pem;

    # Kill cache for all locations
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since off;
    expires off;
    etag off;

    # = : exact match
    location = / {
        root /weather-station/wview/html/fiobbio/;
        try_files $uri $uri/ =404;
    }

    # ~ : regex
    location ~ ^/(index\.|js/|css/|html/) {
        root /weather-station/wview/html/fiobbio/;
        try_files $uri $uri/ =404;
    }

    location /webcam/ {
        alias /www/webcam/;
        try_files $uri $uri/ =404;
    }

    location /webshot/ {
        alias /www/webshot/;
        try_files $uri $uri/ =404;
    }

    location /misma/ {
        alias /www/wview-img/misma/;
        try_files $uri $uri/ =404;
    }

    # fallback
    location / {
        root /www/wview-img/fiobbio;
        #  # First attempt to serve request as file, then
        #  # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;

        # Redirect old /weather path
        rewrite ^/weather/(.+)$ /$1 last;
        rewrite ^/weather/?$ / permanent;
        rewrite ^/misma$ /misma/ permanent;
    }

    # TODO : enable php...
    #location /wviewmgmt/ {
    #    alias /var/lib/wviewmgmt/;
    #    try_files $uri $uri/ =404;
    #}

    #TODO: CGI for perl
    #location /cgi-bin/ {
    #    root /home/pi/wview-rrd/;
    #    try_files $uri =404;
    #    gzip off;
    #    fastcgi_pass  127.0.0.1:8999;
    #    fastcgi_index index.pl;
    #    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    #    include fastcgi_params;
    #}

    ########## Reverse proxies ##########

    #location /misma/ {
    #   proxy_pass http://192.168.1.150:8080/;
    #}

    location /portainer/ {
       proxy_pass http://meteo.local:9000/;
    }

    location /grafana/ {
       proxy_pass http://meteo.local:3000/;
    }

    #location = /stub_status {
    #    stub_status;
    #}

    #location /metrics/nginx {
    #    proxy_pass http://localhost:9113/metrics;
    #}

    #location /metrics/node {
    #    proxy_pass http://localhost:9100/metrics;
    #}
}
