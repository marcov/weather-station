#
# !!!!!!!!!!!!!!!!!!!!!!!!  WARNING WARNING WARNING !!!!!!!!!!!!!!!!!!!!!!!!
#
# Nice job! You are here trying to add a new location to your nginx server,
# seems easy to just copy an existing location and change it, right?
#
# NNNNOOOOOOO!
#
# TLDR
#   if you have a rule like:
#
#       location /foo {
#           root /bar;
#       }
#
#   nginx expects to find files to serve in: /foo/bar
#
#   Most of the time, what you want instead, is:
#   "when the path is /foo, serve files in /bar".
#
#   !!!!! This is obtained using 'alias', and not 'root' !!!!
#
#   location /foo {
#     alias /bar;
#   }

# !!!!!!!!!!!!!!!!!!!!!!!!  WARNING WARNING WARNING !!!!!!!!!!!!!!!!!!!!!!!!
#
# And now you have nginx running in a container, with a mount bind of this file
# on the host, and expect to just change this file with Vim and  reload nginx
# with # `nginx -s reaload' to pick up the changes.
#
# THIS DOES NOT WORK, because every time you save this file, the inode number
# changes, breaking the mount bind.
#
# A workaround is to `:set backupcopy=yes' in Vim

# !!!!!!!!!!!!!!!!!!!!!!!!  WARNING WARNING WARNING !!!!!!!!!!!!!!!!!!!!!!!!
#
#
# NOTE: this file is included, and we are already inside a http { directive
# here!
#

# Define a map to check for mobile devices based on User-Agent
map $http_user_agent $is_mobile {
    default         0;
    #"~*iphone|android|blackberry|webos|mobile" 1;
    #"~ \(iPhone; " 1;
    "~ \(iPhone; | \(Linux; Android | \(Android " 1;
}

log_format detailed '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    'Matched: $request_filename '
                    'Location: $sent_http_x_location_matched';

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    index index.html index.htm;

    try_files $uri $uri/ =404;

    #
    # NOTE!!!! Location order is important.
    #
    # E.g., better to keep the default cache config for reverse proxies.
    #

    #############################################################################
    # Reverse proxies -- aka proxy_pass (keep default cache config)
    # TODO: move to ingress with external IP service/endpoint:
    # https://voyagermesh.com/docs/v2024.3.18/guides/ingress/http/external-svc/
    location /pano/ {
       # HACK: replace absolute links in HTML responses with correctly scoped
       # links.
       # Needs nginx with built-in "ngx_http_sub_module" module.
       # By default it is done only for text/html:
       #   sub_filter_types text/html;
       sub_filter 'href="/web' 'href="/pano/web';
       sub_filter '/tmpfs' '/pano/tmpfs';
       sub_filter_once off;

       proxy_set_header Host $http_host;
       proxy_pass http://192.168.1.205:8083/;
    }
    #############################################################################

    #
    # Fallback for png images of the main / website.
    #
    # Required to avoid interfering with /station_name/file.png.
    #
    location ~ ^(/NOAA/|/Archive/|/stationinfo.json$|/[A-Za-z0-9_]+\.png$) {
        # Enable for debug purposes
        #access_log /var/log/nginx/access.log detailed;
        add_header X-Location-Matched "fiobbio-info";

        root /www/stations/fiobbio1;

        # Kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    # ~ : regex
    location ~ ^(/$|/[^/]+\.html$|/js/|/css/|/sitemap.xml$|/robots.txt$) {
        # Enable for debug purposes
        #access_log /var/log/nginx/access.log detailed;
        add_header X-Location-Matched "root";

        root /usr/share/nginx/html;

        # If the request is from a mobile device, serve mobile.html
        if ($is_mobile) {
            rewrite ^/$ /mobile.html break;
        }

        # Kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    location /webcam/ {
        alias /www/webcam/;
    }

    location /webshot/ {
        alias /www/webshot/;

        # Kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    location /downloader/ {
        alias /www/downloader/;

        # Kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    location /fiobbio1/ {
        # Enable for debug purposes
        #access_log /var/log/nginx/access.log detailed;
        add_header X-Location-Matched "fiobbio1";

        alias /www/stations/fiobbio1/;

        # Kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    location /misma/ {
        # Enable for debug purposes
        #access_log /var/log/nginx/access.log detailed;
        add_header X-Location-Matched "misma";

        alias /www/stations/misma/;

        # Kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    location /fiobbio2/ {
        # Enable for debug purposes
        #access_log /var/log/nginx/access.log detailed;
        add_header X-Location-Matched "fiobbio2";

        alias /www/stations/fiobbio2/;

        # Kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }
}
