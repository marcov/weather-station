apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:stable

          livenessProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
            initialDelaySeconds: 10
            periodSeconds: 15

          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5

          ports:
            - containerPort: 80
          volumeMounts:
            - name: ws-code
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: apps/nginx/nginx.conf
              readOnly: true
            - name: ws-code
              mountPath: /usr/share/nginx/html
              subPath: html
              readOnly: true
            - name: ws-shared
              mountPath: /www/stations
              subPath: stations
              readOnly: true
            - name: ws-shared
              mountPath: /www/webcam
              subPath: webcam
              readOnly: true
            - name: ws-shared
              mountPath: /www/webshot
              subPath: webshot
              readOnly: true
            - name: ws-shared
              mountPath: /www/downloader
              subPath: downloader
              readOnly: true
            - name: localtime
              mountPath: /etc/localtime
              subPath: etc-localtime
              readOnly: true
      volumes:
        - name: ws-code
          persistentVolumeClaim:
            claimName: ws-code-claim
        - name: ws-shared
          persistentVolumeClaim:
            claimName: ws-shared-claim
        - name: localtime
          configMap:
            name: config-localtime
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: ClusterIP
  selector:
    app: nginx
  ports:
    - port: 80
      name: http
      targetPort: 80
